{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack\\\\livestream-app\\\\frontend\\\\src\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Hls from 'hls.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  const [overlays, setOverlays] = useState([]); // Holds overlay data\n  const [isPlaying, setIsPlaying] = useState(false); // To track play/pause state\n  const [overlayText, setOverlayText] = useState(\"\"); // Holds the text input for new overlay\n\n  // Fetch overlays from the backend\n  useEffect(() => {\n    fetch('http://127.0.0.1:5000/api/overlays').then(response => response.json()).then(data => {\n      if (Array.isArray(data)) {\n        setOverlays(data); // Ensure overlays is an array\n      } else {\n        console.error('Invalid overlays data:', data);\n      }\n    }).catch(error => console.error('Error fetching overlays:', error));\n    const video = document.getElementById('video');\n\n    // Initialize HLS.js if supported\n    if (Hls.isSupported()) {\n      const hls = new Hls();\n      hls.loadSource('http://127.0.0.1:5000/hls/stream.m3u8');\n      hls.attachMedia(video);\n    } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\n      video.src = 'http://127.0.0.1:5000/hls/stream.m3u8';\n    }\n  }, []); // Only runs once on mount\n\n  // Function to handle play/pause\n  const handlePlayPause = () => {\n    const video = document.getElementById('video');\n    if (isPlaying) {\n      video.pause();\n    } else {\n      video.play().catch(error => {\n        console.error(\"Error trying to play the video:\", error);\n      });\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  // Function to render overlays\n  const renderOverlays = () => {\n    if (!Array.isArray(overlays)) return null;\n    return overlays.map(overlay => {\n      var _overlay$position, _overlay$position2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        style: {\n          top: ((_overlay$position = overlay.position) === null || _overlay$position === void 0 ? void 0 : _overlay$position.top) || '50px',\n          left: ((_overlay$position2 = overlay.position) === null || _overlay$position2 === void 0 ? void 0 : _overlay$position2.left) || '50px'\n        },\n        children: [overlay.text, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"resize-handle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteOverlay(overlay._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEditOverlay(overlay._id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, overlay._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this);\n    });\n  };\n\n  // Function to create a new overlay\n  const handleCreateOverlay = () => {\n    const newOverlay = {\n      text: overlayText,\n      position: {\n        top: 50,\n        left: 50\n      } // Default position for new overlay\n    };\n\n    // POST request to backend to create overlay\n    fetch('http://127.0.0.1:5000/api/overlays', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newOverlay)\n    }).then(response => response.json()).then(() => {\n      setOverlays([...overlays, newOverlay]); // Update the overlays state\n      setOverlayText(\"\"); // Clear the input field\n    }).catch(error => console.error('Error creating overlay:', error));\n  };\n\n  // Function to edit an overlay\n  const handleEditOverlay = overlayId => {\n    const updatedOverlay = {\n      text: prompt(\"Enter new text for overlay:\"),\n      // Simple prompt for new text\n      position: {\n        top: 100,\n        left: 100\n      } // Update position logic if needed\n    };\n    fetch(`http://127.0.0.1:5000/api/overlays/${overlayId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedOverlay)\n    }).then(response => response.json()).then(() => {\n      // Update the overlay in the state\n      setOverlays(prevOverlays => prevOverlays.map(overlay => overlay._id === overlayId ? {\n        ...overlay,\n        ...updatedOverlay\n      } : overlay));\n    }).catch(error => console.error('Error editing overlay:', error));\n  };\n\n  // Function to delete an overlay\n  const handleDeleteOverlay = overlayId => {\n    fetch(`http://127.0.0.1:5000/api/overlays/${overlayId}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(() => {\n      // Remove the deleted overlay from the state\n      setOverlays(overlays.filter(overlay => overlay._id !== overlayId));\n    }).catch(error => console.error('Error deleting overlay:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Livestream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"video\",\n      controls: true,\n      width: \"600\",\n      children: \"Your browser does not support the video tag.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePlayPause,\n      children: [isPlaying ? 'Pause' : 'Play', \" Video\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: overlayText,\n        onChange: e => setOverlayText(e.target.value),\n        placeholder: \"Enter overlay text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateOverlay,\n        children: \"Add Overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), renderOverlays()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"4XQir/sPOV21gVwNjdsAz/P5pFM=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useState","useEffect","Hls","jsxDEV","_jsxDEV","VideoPlayer","_s","overlays","setOverlays","isPlaying","setIsPlaying","overlayText","setOverlayText","fetch","then","response","json","data","Array","isArray","console","error","catch","video","document","getElementById","isSupported","hls","loadSource","attachMedia","canPlayType","src","handlePlayPause","pause","play","renderOverlays","map","overlay","_overlay$position","_overlay$position2","className","style","top","position","left","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleDeleteOverlay","_id","handleEditOverlay","handleCreateOverlay","newOverlay","method","headers","body","JSON","stringify","overlayId","updatedOverlay","prompt","prevOverlays","filter","id","controls","width","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/fullstack/livestream-app/frontend/src/VideoPlayer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Hls from 'hls.js';\r\n\r\nconst VideoPlayer = () => {\r\n  const [overlays, setOverlays] = useState([]); // Holds overlay data\r\n  const [isPlaying, setIsPlaying] = useState(false); // To track play/pause state\r\n  const [overlayText, setOverlayText] = useState(\"\"); // Holds the text input for new overlay\r\n\r\n  // Fetch overlays from the backend\r\n  useEffect(() => {\r\n    fetch('http://127.0.0.1:5000/api/overlays')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (Array.isArray(data)) {\r\n          setOverlays(data);  // Ensure overlays is an array\r\n        } else {\r\n          console.error('Invalid overlays data:', data);\r\n        }\r\n      })\r\n      .catch(error => console.error('Error fetching overlays:', error));\r\n\r\n    const video = document.getElementById('video');\r\n    \r\n    // Initialize HLS.js if supported\r\n    if (Hls.isSupported()) {\r\n      const hls = new Hls();\r\n      hls.loadSource('http://127.0.0.1:5000/hls/stream.m3u8');\r\n      hls.attachMedia(video);\r\n    } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\r\n      video.src = 'http://127.0.0.1:5000/hls/stream.m3u8';\r\n    }\r\n  }, []); // Only runs once on mount\r\n\r\n  // Function to handle play/pause\r\n  const handlePlayPause = () => {\r\n    const video = document.getElementById('video');\r\n    \r\n    if (isPlaying) {\r\n      video.pause();\r\n    } else {\r\n      video.play().catch((error) => {\r\n        console.error(\"Error trying to play the video:\", error);\r\n      });\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  // Function to render overlays\r\n  const renderOverlays = () => {\r\n    if (!Array.isArray(overlays)) return null;\r\n\r\n    return overlays.map((overlay) => (\r\n      <div\r\n        key={overlay._id}\r\n        className=\"overlay\"\r\n        style={{\r\n          top: overlay.position?.top || '50px',\r\n          left: overlay.position?.left || '50px',\r\n        }}\r\n      >\r\n        {overlay.text}\r\n        <div className=\"resize-handle\"></div>\r\n        <button onClick={() => handleDeleteOverlay(overlay._id)}>Delete</button>\r\n        <button onClick={() => handleEditOverlay(overlay._id)}>Edit</button>\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  // Function to create a new overlay\r\n  const handleCreateOverlay = () => {\r\n    const newOverlay = {\r\n      text: overlayText,\r\n      position: { top: 50, left: 50 }, // Default position for new overlay\r\n    };\r\n\r\n    // POST request to backend to create overlay\r\n    fetch('http://127.0.0.1:5000/api/overlays', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(newOverlay),\r\n    })\r\n    .then(response => response.json())\r\n    .then(() => {\r\n      setOverlays([...overlays, newOverlay]); // Update the overlays state\r\n      setOverlayText(\"\"); // Clear the input field\r\n    })\r\n    .catch(error => console.error('Error creating overlay:', error));\r\n  };\r\n\r\n  // Function to edit an overlay\r\n  const handleEditOverlay = (overlayId) => {\r\n    const updatedOverlay = {\r\n      text: prompt(\"Enter new text for overlay:\"), // Simple prompt for new text\r\n      position: { top: 100, left: 100 }, // Update position logic if needed\r\n    };\r\n\r\n    fetch(`http://127.0.0.1:5000/api/overlays/${overlayId}`, {\r\n      method: 'PUT',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(updatedOverlay),\r\n    })\r\n    .then(response => response.json())\r\n    .then(() => {\r\n      // Update the overlay in the state\r\n      setOverlays(prevOverlays => prevOverlays.map(overlay => \r\n        overlay._id === overlayId ? { ...overlay, ...updatedOverlay } : overlay\r\n      ));\r\n    })\r\n    .catch(error => console.error('Error editing overlay:', error));\r\n  };\r\n\r\n  // Function to delete an overlay\r\n  const handleDeleteOverlay = (overlayId) => {\r\n    fetch(`http://127.0.0.1:5000/api/overlays/${overlayId}`, {\r\n      method: 'DELETE',\r\n    })\r\n    .then(response => response.json())\r\n    .then(() => {\r\n      // Remove the deleted overlay from the state\r\n      setOverlays(overlays.filter(overlay => overlay._id !== overlayId));\r\n    })\r\n    .catch(error => console.error('Error deleting overlay:', error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Livestream</h1>\r\n      <video id=\"video\" controls width=\"600\">\r\n        Your browser does not support the video tag.\r\n      </video>\r\n      <button onClick={handlePlayPause}>\r\n        {isPlaying ? 'Pause' : 'Play'} Video\r\n      </button>\r\n\r\n      <div>\r\n        <input \r\n          type=\"text\" \r\n          value={overlayText} \r\n          onChange={(e) => setOverlayText(e.target.value)} \r\n          placeholder=\"Enter overlay text\"\r\n        />\r\n        <button onClick={handleCreateOverlay}>Add Overlay</button>\r\n      </div>\r\n\r\n      {renderOverlays()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}