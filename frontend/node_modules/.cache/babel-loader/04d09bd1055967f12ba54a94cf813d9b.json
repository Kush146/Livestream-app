{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack\\\\livestream-app\\\\frontend\\\\src\\\\VideoPlayer.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Hls from 'hls.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoPlayer = () => {\n  _s();\n  useEffect(() => {\n    const video = document.getElementById('video');\n\n    // Check if HLS.js is supported by the browser\n    if (Hls.isSupported()) {\n      const hls = new Hls();\n      hls.loadSource('http://127.0.0.1:5000/hls/stream.m3u8'); // Adjust this URL to match your Flask server\n      hls.attachMedia(video);\n      hls.on(Hls.Events.MANIFEST_PARSED, () => {\n        // Ensure user interaction before playing the video\n        document.getElementById('playButton').addEventListener('click', () => {\n          video.play();\n        });\n      });\n\n      // Handle any errors that occur during HLS.js setup\n      hls.on(Hls.Events.ERROR, (event, data) => {\n        if (data.fatal) {\n          switch (data.fatal) {\n            case Hls.ErrorTypes.NETWORK_ERROR:\n              console.error(\"Network error occurred\");\n              break;\n            case Hls.ErrorTypes.MEDIA_ERROR:\n              console.error(\"Media error occurred\");\n              break;\n            case Hls.ErrorTypes.OTHER_ERROR:\n              console.error(\"Other error occurred\");\n              break;\n            default:\n              console.error(\"An unknown error occurred\");\n              break;\n          }\n        }\n      });\n    } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\n      // Safari browser support for HLS\n      video.src = 'http://127.0.0.1:5000/hls/stream.m3u8'; // Adjust this URL to match your Flask server\n      video.addEventListener('loadedmetadata', () => {\n        // Ensure user interaction before playing the video\n        document.getElementById('playButton').addEventListener('click', () => {\n          video.play();\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Livestream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      id: \"video\",\n      controls: true,\n      width: \"600\",\n      children: \"Your browser does not support the video tag.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"playButton\",\n      children: \"Play Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoPlayer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = VideoPlayer;\nexport default VideoPlayer;\nvar _c;\n$RefreshReg$(_c, \"VideoPlayer\");","map":{"version":3,"names":["React","useEffect","Hls","jsxDEV","_jsxDEV","VideoPlayer","_s","video","document","getElementById","isSupported","hls","loadSource","attachMedia","on","Events","MANIFEST_PARSED","addEventListener","play","ERROR","event","data","fatal","ErrorTypes","NETWORK_ERROR","console","error","MEDIA_ERROR","OTHER_ERROR","canPlayType","src","children","fileName","_jsxFileName","lineNumber","columnNumber","id","controls","width","_c","$RefreshReg$"],"sources":["D:/fullstack/livestream-app/frontend/src/VideoPlayer.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport Hls from 'hls.js';\r\n\r\nconst VideoPlayer = () => {\r\n  useEffect(() => {\r\n    const video = document.getElementById('video');\r\n\r\n    // Check if HLS.js is supported by the browser\r\n    if (Hls.isSupported()) {\r\n      const hls = new Hls();\r\n      hls.loadSource('http://127.0.0.1:5000/hls/stream.m3u8'); // Adjust this URL to match your Flask server\r\n      hls.attachMedia(video);\r\n      hls.on(Hls.Events.MANIFEST_PARSED, () => {\r\n        // Ensure user interaction before playing the video\r\n        document.getElementById('playButton').addEventListener('click', () => {\r\n          video.play();\r\n        });\r\n      });\r\n\r\n      // Handle any errors that occur during HLS.js setup\r\n      hls.on(Hls.Events.ERROR, (event, data) => {\r\n        if (data.fatal) {\r\n          switch (data.fatal) {\r\n            case Hls.ErrorTypes.NETWORK_ERROR:\r\n              console.error(\"Network error occurred\");\r\n              break;\r\n            case Hls.ErrorTypes.MEDIA_ERROR:\r\n              console.error(\"Media error occurred\");\r\n              break;\r\n            case Hls.ErrorTypes.OTHER_ERROR:\r\n              console.error(\"Other error occurred\");\r\n              break;\r\n            default:\r\n              console.error(\"An unknown error occurred\");\r\n              break;\r\n          }\r\n        }\r\n      });\r\n    } else if (video.canPlayType('application/vnd.apple.mpegurl')) {\r\n      // Safari browser support for HLS\r\n      video.src = 'http://127.0.0.1:5000/hls/stream.m3u8'; // Adjust this URL to match your Flask server\r\n      video.addEventListener('loadedmetadata', () => {\r\n        // Ensure user interaction before playing the video\r\n        document.getElementById('playButton').addEventListener('click', () => {\r\n          video.play();\r\n        });\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Livestream</h1>\r\n      <video id=\"video\" controls width=\"600\">\r\n        Your browser does not support the video tag.\r\n      </video>\r\n      <button id=\"playButton\">Play Video</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxBL,SAAS,CAAC,MAAM;IACd,MAAMM,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;;IAE9C;IACA,IAAIP,GAAG,CAACQ,WAAW,CAAC,CAAC,EAAE;MACrB,MAAMC,GAAG,GAAG,IAAIT,GAAG,CAAC,CAAC;MACrBS,GAAG,CAACC,UAAU,CAAC,uCAAuC,CAAC,CAAC,CAAC;MACzDD,GAAG,CAACE,WAAW,CAACN,KAAK,CAAC;MACtBI,GAAG,CAACG,EAAE,CAACZ,GAAG,CAACa,MAAM,CAACC,eAAe,EAAE,MAAM;QACvC;QACAR,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACQ,gBAAgB,CAAC,OAAO,EAAE,MAAM;UACpEV,KAAK,CAACW,IAAI,CAAC,CAAC;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACAP,GAAG,CAACG,EAAE,CAACZ,GAAG,CAACa,MAAM,CAACI,KAAK,EAAE,CAACC,KAAK,EAAEC,IAAI,KAAK;QACxC,IAAIA,IAAI,CAACC,KAAK,EAAE;UACd,QAAQD,IAAI,CAACC,KAAK;YAChB,KAAKpB,GAAG,CAACqB,UAAU,CAACC,aAAa;cAC/BC,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAC;cACvC;YACF,KAAKxB,GAAG,CAACqB,UAAU,CAACI,WAAW;cAC7BF,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;cACrC;YACF,KAAKxB,GAAG,CAACqB,UAAU,CAACK,WAAW;cAC7BH,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;cACrC;YACF;cACED,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;cAC1C;UACJ;QACF;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAInB,KAAK,CAACsB,WAAW,CAAC,+BAA+B,CAAC,EAAE;MAC7D;MACAtB,KAAK,CAACuB,GAAG,GAAG,uCAAuC,CAAC,CAAC;MACrDvB,KAAK,CAACU,gBAAgB,CAAC,gBAAgB,EAAE,MAAM;QAC7C;QACAT,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACQ,gBAAgB,CAAC,OAAO,EAAE,MAAM;UACpEV,KAAK,CAACW,IAAI,CAAC,CAAC;QACd,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEd,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB/B,OAAA;MAAOgC,EAAE,EAAC,OAAO;MAACC,QAAQ;MAACC,KAAK,EAAC,KAAK;MAAAP,QAAA,EAAC;IAEvC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACR/B,OAAA;MAAQgC,EAAE,EAAC,YAAY;MAAAL,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAxDID,WAAW;AAAAkC,EAAA,GAAXlC,WAAW;AA0DjB,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}